name: Deploy to Oracle VM

on:
  push:
    branches:
      - upgrade   # upgrade 브랜치에 push 시 자동 배포

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Oracle VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_VM_HOST }}
          username: ${{ secrets.ORACLE_VM_USERNAME }}
          key: ${{ secrets.ORACLE_VM_SSH_KEY }}
          script: |
            echo ">>> Connecting to Oracle VM and starting deployment..."
            cd ~/apps/momentum-etf
            if [ ! -d .git ]; then
              git clone https://github.com/jasonisdoing/momentum-etf.git .
            else
              git fetch origin upgrade
              git reset --hard origin/upgrade
            fi
            sudo docker compose down
            sudo docker compose up -d --build
            echo ">>> Oracle VM deployment completed."

      - name: Extract APP_VERSION
        id: app_version
        run: |
          VERSION=$(python -c "from pathlib import Path; import re; content = Path('utils/logger.py').read_text(encoding='utf-8'); match = re.search(r'APP_VERSION\\s*=\\s*[\'\"]([^\'\"]+)[\'\"]', content); print(match.group(1) if match else '')")
          if [ -z "$VERSION" ]; then
            echo 'APP_VERSION not found' >&2
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Notify Slack (deploy succeeded)
        if: ${{ success() }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"✅ Oracle VM (momentum-etf) 배포 완료 (branch: upgrade)\\nAPP_VERSION: ${{ steps.app_version.outputs.version }}\"}" \
            ${{ secrets.LOGS_SLACK_WEBHOOK }}

      - name: Notify Slack (deploy failed)
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"❌ Oracle VM (momentum-etf) 배포 실패 (branch: upgrade)\\nRepo: ${{ github.repository }}\\nCommit: ${{ github.sha }}\"}" \
            ${{ secrets.LOGS_SLACK_WEBHOOK }}
